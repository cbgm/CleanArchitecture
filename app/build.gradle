apply plugin: "com.android.application"
apply plugin: "de.felixschulze.gradle.hockeyapp"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "jacoco-android"
apply plugin: "com.google.gms.google-services"
apply from: "../default-config.gradle"

android {
   signingConfigs {
      config {
         keyAlias "key0"
         keyPassword "08150815"
         storeFile
         file("/Users/christian/AndroidStudioProjects/CleanArchitecture/keystore/keystore")
         storePassword "08150815"
         storeFile
         file("/Users/christian/AndroidStudioProjects/CleanArchitecture/keystore/keystore")
         storeFile
         file("/Users/christian/AndroidStudioProjects/CleanArchitecture/keystore/keystore")
         storeFile
         file("/Users/christian/AndroidStudioProjects/CleanArchitecture/keystore/keystore")
         storeFile file("/Users/christian/Desktop/keystore")
      }
   }
   defaultConfig {
      applicationId rootProject.ext.applicationId
   }

   buildTypes {
      release {
         signingConfig signingConfigs.config
      }
      debug {
         applicationIdSuffix ".debug"
      }

      project.afterEvaluate {
         project.android.applicationVariants.all { variant ->
            def addConstant = { constantName, constantValue ->
               variant.mergedFlavor.manifestPlaceholders += [(constantName): constantValue]
               buildConfigField "String", "${constantName}", "\"${constantValue}\""
            }

            def debugFlag = ""
            if(buildType.name == "debug"){
               debugFlag = ".debug"
            }
            rootProject.ext.NavigationItems.each {
               action -> addConstant(action, "${rootProject.ext.applicationId}${debugFlag}.${action}")
            }
         }
      }
   }

   bundle {
      language {
         enableSplit = true
      }
      density {
         enableSplit = true
      }
      abi {
         enableSplit = true
      }
   }

   dynamicFeatures = [":features:shop"]
}

hockeyapp {
   apiToken = " 706f733dc3ba47d09b83e32c4885f8dd"
   notify = 1
}

dependencies {
   implementation fileTree(include: ["*.jar"], dir: "libs")
   def presDep = rootProject.ext.presentationDependencies
   implementation presDep.koinAndroid
   implementation presDep.koinCore

   implementation project (":libraries:core")
   implementation project (":features:profile")
   implementation project (":features:event")
   implementation project (":features:auth")

   def testDep = rootProject.ext.testDependencies
   testImplementation testDep.junit
   testImplementation testDep.testRunner
   testImplementation testDep.espresso
   testImplementation testDep.koinTest
   implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
   implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'
}

jacocoAndroidUnitTestReport {
   csv.enabled false
   html.enabled false
   xml.enabled true
}

task copyChildNavigationGraphs(type: Copy) {
   from '../features/profile/src/main/res/navigation'
   into 'src/main/res/navigation'
   from '../features/event/src/main/res/navigation'
   into 'src/main/res/navigation'
   from '../features/auth/src/main/res/navigation'
   into 'src/main/res/navigation'
}
preBuild.dependsOn copyChildNavigationGraphs